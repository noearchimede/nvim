*config.txt*  Help page for this nvim configuration.

This help file contains a list of the main features implemented in my nvim
configuration.

For solutions to known problems see |troubleshooting|.
For hints about using Vim see |hints|.


TABLE OF CONTENTS

    1. Mappings                         |config-mappings|
    2. Keyboard layout                  |config-keyboard|
    3. Commands                         |config-commands|




=============================================================================
MAPPINGS                                             *mymap*    *config-mappings*
=============================================================================


This section contains all custom mappings in this nvim configuration.

The leader key is `\` (backslash) with `<space>` as alias. Any one of those
two keys can be used in place of <leader> in all "leader mappings".

                                                               *myi*  *mymap_i*
Insert mode mappings ~
|mymap_i_overview| ...... Overview of mappings in insert mode
|mymap_i_autocomplete| .. Autocompletion and snippets
|mymap_i_lsp| ........... LSP tools
|mymap_i_surround| ...... Quotes, brackets, etc.

                                                         *myle*  *mymap_leader*
Leader mappings ~
|mymap_leader_leader| ... LSP
|mymap_leader_a| ........ Code outline
|mymap_leader_b| ........ Buffer navigation
-> |mymap_leader_#| ..... Quick buffer navigation
|mymap_leader_c| ........ Compilers and visualizers
|mymap_leader_d| ........ Trouble
|mymap_leader_e|
|mymap_leader_f| ........ Telescope
|mymap_leader_g| ........ Git
|mymap_leader_h|
|mymap_leader_i| ........ Alignement, indentation, Insert attachments
|mymap_leader_j|
|mymap_leader_k|
|mymap_leader_l| ........ Location list 
|mymap_leader_m| ........ Motions
|mymap_leader_n| ........ Notifications
|mymap_leader_o|
|mymap_leader_p|
|mymap_leader_q| ........ Quickfix lists and terminal
|mymap_leader_r| ........ REPL
|mymap_leader_s| ........ Search
|mymap_leader_t| ........ File tree, sidebars, tabs
|mymap_leader_u|
|mymap_leader_v| ........ Interface ("View")
|mymap_leader_w| ........ Workspace and sessions
|mymap_leader_x| ........ Quick Settings
|mymap_leader_y| ........ Plugin toggles
|mymap_leader_z|
                                                               *myg*  *mymap_g*
G mappings ~
|mymap_gb| .............. Comments
|mymap_gc| .............. Comments
|mymap_gl|
|mymap_gy|
|mymap_gz| .............. Brackets and quotes
                                                           *myo*  *mymap_other*
Other global mappings ~
|mymap_overwritten| ..... Mappings that overwrite a Vim mapping
|mymap_m| ............... Extensions to the built-in marks system
|mymap_ctrl| ............ CTRL mappings
|mymap_bracket| ......... [] mappings
|mymap_misc| ............ Miscellaneous
                                                         *mysp* *mymap_special*
Mappings for special buffers ~
|mymap_quickfix| ........ Mappings in quickfix and location lists
|mymap_terminal| ........ Mappings in terminal buffers
                                                        *myft* *mymap_filetype*
Filetype mappings ~
|mymap_ft_markdown| ..... Mappings for markdown
-> |mymap_ft_obsidian| .. Mappings for markdown files in an Obsidian vault





=============================================================================
INSERT MODE MAPPINGS                                                  |mymap_i|
-----------------------------------------------------------------------------

List of custom mappings in Insert mode.

-----------------------------------------------------------------------------
Overview of mappings in insert modes                *myiow*  *mymap_i_overview*
-----------------------------------------------------------------------------

The following table is an overview of the function of every CTRL sequence in
Vim and in Unix terminals. The `Syn` column shows default synonims.
The detailed function of most keys is in |ins-special-keys|, except for the
ones marked with `(iss)` which are in |ins-special-special| and CTRL-F in
in |cinoptions|.

The `config` column indicates keys that are remapped in this Vim
configuration. A `+` is added when the custom mappings are added to the
existing ones without removing the default functionality.

The `?` column displays `X` for keys that are completely free and `/` for keys
that have a function I don't need.


Key      | Config.    | ? | Syn | Terminal          | Vim
–––––––––|––––––––––––|–––|–––––|–––––––––––––––––––|–––––––––––––––––––––––––
|i_<esc>|  |            |   | [   |                   | Go back to Normal mode
|i_<bs>|   |            |   | H   |                   | Delete char before cursor
|i_<tab>|  | +next cmp  |   | I   |                   | Insert a tab
i_S-<tab>| +prev cmp  |   | sI  |                   | Insert a tab (ignores shift)
|i_<cr>|   |            |   | M J |                   | Begin a new line
|i_<del>|  |            |   |     |                   | Delete char under cursor
|i_CTRL-A| |            | / |     |                   | Insert previous text
i_CTRL-B | scroll doc | X |     |                   |            
|i_CTRL-C| | +close cmp |   |     |                   | Quit insert mode
|i_CTRL-D| |            |   |     |                   | Decrease indent
|i_CTRL-E| |            |   |     |                   | Insert character below
|i_CTRL-F| | scroll doc | / |     |                   | (cinoptions) Indent
|i_CTRL-G| | +surround   |   |     |                   | (iss) CTRL-G mappings
|i_CTRL-H| |            |   | bs  | Backspace         | Delete before cursor
|i_CTRL-I| | next cmp   |   | tab | Tab               | Insert a tab
|i_CTRL-J| |            |   | M lf| Line feed         | Begin new line
|i_CTRL-K| |            |   |     |                   | Insert digraph
i_CTRL-L | snip exp   | X |     |                   |            
|i_CTRL-M| |            | X | J cr| Carriage return   | Begin new line
|i_CTRL-N| | snip jump  | / |     |                   | Find next keyword
|i_CTRL-O| |            |   |     |                   | (iss) Run one command
|i_CTRL-P| | snip jump  | / |     |                   | Find previous keyword
|i_CTRL-Q| |            |   | V   | Flow ctrl: start  | Insert literally
|i_CTRL-R| |            |   |     |                   | Paste from register
i_CTRL-S |            |   |     | Flow ctrl: stop   |            
|i_CTRL-T| |            |   |     |                   | Increase indent
|i_CTRL-U| |            |   |     |                   | Clear line up to cursor
|i_CTRL-V| |            | / | Q   |                   | Insert literally
|i_CTRL-W| |            |   |     |                   | Delete preceding word
|i_CTRL-X| |            |   |     |                   | CTRL-X mappings
|i_CTRL-Y| |            |   |     |                   | Insert character above
i_CTRL-Z |            |   |     | Suspend process   |            
|i_CTRL-@| |            |   |     |                   | Like CTRL-A, then exit
|i_CTRL-[| |            |   | esc | Escape            | Exit Insert mode
|i_CTRL-\| |            |   |     |                   | + CTRL-N: Normal mode
|i_CTRL-_| |            | X |     |                   |            
|i_CTRL-^| |            |   |     |                   | Toggle lang typing mode
|i_CTRL-]| |            |   |     |                   | Trigger abbreviation
–––––––––|––––––––––––|–––|–––––|–––––––––––––––––––|–––––––––––––––––––––––––



-----------------------------------------------------------------------------
Autocompletion and snippets                      *myic*  *mymap_i_autocomplete*
-----------------------------------------------------------------------------

Selection ~
*mymap_i_tab*      i  <tab>       select next completion or jump to snippet tag
*mymap_i_S-tab*    i  <S-tab>     select previous completion

*mymap_i_Down*     i  <Down>      select next completion (go down in menu)
*mymap_i_Up*       i  <Up>        select previous completion (go up in menu)

Snipptes ~
*mymap_i_CTRL-L*   i  <C-L>       expand snippet ("Luasnip")
*mymap_i_CTRL-N*   i  <C-N>       jump to Next snippet tag
*mymap_i_CTRL-P*   i  <C-P>       jump to Previous snippet tag

Documentation ~
*mymap_i_CTRL-B*   i  <C-B>       scroll the doc popup upwards ("Backwards")
*mymap_i_CTRL-F*   i  <C-F>       scroll the doc popup downwards ("Forwards")

Completion menu ~
*mymap_i_CTRL-C*   i  <C-C>       Close autocompletion menu


-----------------------------------------------------------------------------
LSP                                                       *myil*  *mymap_i_lsp*
-----------------------------------------------------------------------------

*mymap_i_CTRL-S*   i  <C-S>        signature help (same as |mymap_CTRL-S| in
                                 normal mode)


-----------------------------------------------------------------------------
Surrounds: quotes, parentheses, etc.                 *myis*  *mymap_i_surround*
-----------------------------------------------------------------------------

Surround ~
*mymap_i_CTRL-G**_z* i  <C-G>z{ch}  insert pair of {ch} [surround]
*mymap_i_CTRL-G_Z* i  <C-G>Z{ch}  insert multiline pair of {ch} [surround]




=============================================================================
LEADER MAPPINGS                                                  |mymap_leader|
-----------------------------------------------------------------------------



-----------------------------------------------------------------------------
LSP                                             *mylele*  *mymap_leader_leader*
-----------------------------------------------------------------------------

*mymap_leader_leader_n*  n  \\n  Next diagnostic (alias: |mymap_]d|)
*mymap_leader_leader_p*  n  \\p  Previous diagnostic (alias: |mymap_[d|)
Also see |mymap_]e| and |mymap_]w| for jumps limited to errors and warnings.

*mymap_leader_leader_v*  n  \\v  View line diagnostic

*mymap_leader_leader_k*  n  \\k  show Documentation
*mymap_leader_leader_j*  n  \\j  show signature help

*mymap_leader_leader_d*  n  \\d  go to Definition
*mymap_leader_leader_D*  n  \\D  go to Definition in selected window

*mymap_leader_leader_l*  n  \\l  go to decLaration
*mymap_leader_leader_L*  n  \\L  go to decLaration in selected window

*mymap_leader_leader_i*  n  \\i  go to Implementation
*mymap_leader_leader_I*  n  \\I  go to Implementation in selected window

*mymap_leader_leader_t*  n  \\t  go to Type definition
*mymap_leader_leader_T*  n  \\T  go to Type definition in selected window

*mymap_leader_leader_r*  n  \\r  list References in quicfix list

*mymap_leader_leader_a*  n  \\a  code Actions
*mymap_leader_leader_c*  n  \\c  Change name
*mymap_leader_leader_f*  n  \\f  Format

*mymap_leader_leader_w*  n  \\w  get Workspace diagnostics [workspace-diagnostics]

Unused ~
*mymap_leader_leader_b*
*mymap_leader_leader_e*
*mymap_leader_leader_g*
*mymap_leader_leader_h*
*mymap_leader_leader_m*
*mymap_leader_leader_o*
*mymap_leader_leader_q*
*mymap_leader_leader_s*
*mymap_leader_leader_u*
*mymap_leader_leader_x*
*mymap_leader_leader_y*
*mymap_leader_leader_z*


-----------------------------------------------------------------------------
Code outline                                          *mylea*  *mymap_leader_a*
-----------------------------------------------------------------------------

Aerial ~
*mymap_leader_aa*  n  \aa   open Aerial (without focusing)
*mymap_leader_af*  n  \af   open aerial and Focus
*mymap_leader_aA*  n  \aA   close Aerial

*mymap_leader_ag*  n  \ag   open navigator ("Go to")

*mymap_leader_an*  n  \an   jump to Next symbol (alias: |mymap_]a|)
*mymap_leader_ap*  n  \ap   jump to Previous symbol (alias: |mymap_[a|)



-----------------------------------------------------------------------------
Buffers                                               *myleb*  *mymap_leader_b*
-----------------------------------------------------------------------------

Change buffer ~
*mymap_leader_bo*  n  \bo   Move backwards in the window buffer history [bufjump]
*mymap_leader_bi*  n  \bi   Move forwards in the window buffer history [bufjump]

Delete buffers ~
*mymap_leader_bu*  n  \bu   delete all "Untouched" buffers [hbac]
*mymap_leader_bd*  n  \bd   Same as |bd| but without closing window [bufdelete]
*mymap_leader_bw*  n  \bw   Same as |bw| but without closing window [bufdelete]

Grapple ~
*mymap_leader_ba*  n  \ba   Add tag to current buffer
*mymap_leader_br*  n  \br   Remove tag from current buffer
*mymap_leader_bg*  n  \bg   show Grapple window
*mymap_leader_be*  n  \be   Erase tag list for current scope
*mymap_leader_bn*  n  \bn   go to Next tagged buffer
*mymap_leader_bp*  n  \bp   go to Previous tagged buffer

The |mymap_leader_#| (leader + number) mappings are also mapped to Grapple
actions:
                                                      *myle#*  *mymap_leader_#*
*mymap_leader_0*  n  \0    Jump to the next tagged buffer
*mymap_leader_{nr}* n \{nr} Jump to the tagged buffer number {nr} (1 to 9)



-----------------------------------------------------------------------------
                                                      *mylec*  *mymap_leader_c*
-----------------------------------------------------------------------------

Overseer ~
*mymap_leader_cc*  n  \ct   run overseer task
*mymap_leader_co*  n  \co   open overseer Overview
*mymap_leader_cO*  n  \cO   close overseer Overview


-----------------------------------------------------------------------------
Trouble                                               *myled*  *mymap_leader_d*
-----------------------------------------------------------------------------

*mymap_leader_dd*  n  \dd   show diagnostics for Buffer
*mymap_leader_dw*  n  \dw   show diagnostics for Workspace
*mymap_leader_dl*  n  \dr   reLoad manually

*mymap_leader_dn*  n  \dn   jump to Next item
*mymap_leader_dp*  n  \dp   jump to Previous item

*mymap_leader_dD*  n  \dD   close trouble

-----------------------------------------------------------------------------
                                                      *mylee*  *mymap_leader_e*
-----------------------------------------------------------------------------



-----------------------------------------------------------------------------
File and buffer navigation                            *mylef*  *mymap_leader_f*
-----------------------------------------------------------------------------

File navigation ~
*mymap_leader_ff*  n  \ff   Files
*mymap_leader_fa*  n  \fa   files in Any directory (promts for name)
*mymap_leader_fb*  n  \fb   Buffers
*mymap_leader_fo*  n  \fo   Old files

Search ~
*mymap_leader_fg*  n  \fg   live Grep
*mymap_leader_fw*  n  \fw   live grep on Word under cursor

Clibboard and jump anchors ~
*mymap_leader_fy*  n  \fy   Yank history [neoclip]
*mymap_leader_fm*  n  \fm   navigate file Marks

LSP objects ~
*mymap_leader_fi*  n  \fi   lsp: Implementations
*mymap_leader_fr*  n  \fr   lsp: References
*mymap_leader_fd*  n  \fd   lsp: Definitions
*mymap_leader_fe*  n  \fe   lsp: diagnostics ("Errors")
*mymap_leader_fl*  n  \fl   lsp: diagnostics for Local file

Documentation  ~
*mymap_leader_fh*  n  \fh   Help tags
*mymap_leader_fk*  n  \fk   Keymaps

Unused ~
*mymap_leader_fc*
*mymap_leader_fj*
*mymap_leader_fn*
*mymap_leader_fp*
*mymap_leader_fq*
*mymap_leader_fs*
*mymap_leader_ft*
*mymap_leader_fv*
*mymap_leader_fx*
*mymap_leader_fz*


-----------------------------------------------------------------------------
Git                                                   *myleg*  *mymap_leader_g*
-----------------------------------------------------------------------------

Git status (neogit) ~
*mymap_leader_gg*  n  \gg   open Git status
*mymap_leader_gt*  n  \gt   open git status in new Tab
*mymap_leader_gc*  n  \gc   Commit staged changes
*mymap_leader_gl*  n  \gl   show Log

Hunk navigation (gitsigns) ~
*mymap_leader_gn*  n  \gn   move to Previous hunk (alias: |mymap_]c|)
*mymap_leader_gp*  n  \gp   move to Next hunk (alias: |mymap_[c|)

Hunk operations (gitsigns) ~
*mymap_leader_gs*  n  \gs   toggle Stage hunk under cursor
                 v  \gs   toggle Stage (partial) hunk(s) in visual selection
*mymap_leader_gr*  n  \gr   Reset hunk under cursor
                 v  \gr   Reset (partial) hunk(s) in visual selection
*mymap_leader_gv*  n  \gv   preView hunk under cursor
*mymap_leader_gu*  n  \gu   Undo last stage hunk
*mymap_leader_gS*  n  \gS   Stage all hunks in file
*mymap_leader_gR*  n  \gR   Reset all hunks in file

Inline indicators (gitsigns) ~
*mymap_leader_gb*  n  \gb   show blame window
*mymap_leader_gi*  n  \gi   toggle Inline diff view (linehl, word diff, deleted)
*mymap_leader_gx*  n  \gx   toggle inline deleted (X) lines view only
*mymap_leader_gw*  n  \gw   toggle inline Word diff view only
*mymap_leader_gy*  n  \gy   toggle inline line change only

Diff (diffview) ~
*mymap_leader_gd*  n  \gd   open Diffview
*mymap_leader_gf*  n  \gf   open File history
*mymap_leader_gh*  n  \gh   open History

Unused ~
*mymap_leader_ga*
*mymap_leader_ge*
*mymap_leader_gj*
*mymap_leader_gk*
*mymap_leader_gm*
*mymap_leader_go*
*mymap_leader_gq*
*mymap_leader_gz*


-----------------------------------------------------------------------------
                                                      *myleh*  *mymap_leader_h*
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Alignment and Indentation                             *mylei*  *mymap_leader_i*
-----------------------------------------------------------------------------

Join/split objects ~
*mymap_leader_ij*  n  \ij   Join or split arrays, functions, ... [treesj]

Images ~
*mymap_leader_ip*  n  \ip   Paste image from clipboard [img-clip]


-----------------------------------------------------------------------------
                                                      *mylej*  *mymap_leader_j*
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
                                                      *mylek*  *mymap_leader_k*
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Location list                                         *mylel*  *mymap_leader_l*
-----------------------------------------------------------------------------

Note: analoguous mappings for the quickfix list listed in |mymap_leader_q|
*mymap_leader_ll*  n  \ll   open Location list
*mymap_leader_lL*  n  \lL   close Location list
*mymap_leader_ln*  n  \ln   move to next location item (alias: |mymap_]q|)
*mymap_leader_lp*  n  \lp   move to previous location item (alias: |mymap_[q|)
*mymap_leader_lf*  n  \lf   move to first location item
*mymap_leader_le*  n  \le   move to last location item
*mymap_leader_lN*  n  \lN   move to first location item in the next file
*mymap_leader_lP*  n  \lP   move to last location item in the previous file


-----------------------------------------------------------------------------
Motions                                               *mylem*  *mymap_leader_m*
-----------------------------------------------------------------------------

*mymap_leader_mj*  n  \mj   Move down to next non-whitespace character in column
*mymap_leader_mk*  n  \mk   Move up to next non-whitespace character in column


-----------------------------------------------------------------------------
                                                      *mylen*  *mymap_leader_n*
-----------------------------------------------------------------------------

Notifications (noice) ~
*mymap_leader_nh*  n  \nh   show notification History


-----------------------------------------------------------------------------
                                                      *myleo*  *mymap_leader_o*
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
                                                      *mylep*  *mymap_leader_p*
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Quickfix list and terminal                            *myleq*  *mymap_leader_q*
-----------------------------------------------------------------------------

Quickfix list ~
Note: analoguous mappings for the location list listed in |mymap_leader_l|
*mymap_leader_qq*  n  \qq   open Quickfix list
*mymap_leader_qQ*  n  \qQ   close Quickfix list
*mymap_leader_qn*  n  \qn   move to next quickfix item (alias: |mymap_]q|)
*mymap_leader_qp*  n  \qp   move to previous quickfix item (alias: |mymap_[q|)
*mymap_leader_qf*  n  \qf   move to first quickfix item
*mymap_leader_qe*  n  \qe   move to last quickfix item
*mymap_leader_qN*  n  \qN   move to first quickfix item in the next file
*mymap_leader_qP*  n  \qP   move to last quickfix item in the previous file

Terminal ~
*mymap_leader_qo*  n  \qo   Open a new terminal in the current window
*mymap_leader_qh*  n  \qh   open a new terminal in a Horizontal split
*mymap_leader_qv*  n  \qv   open a new terminal in a Vertical split
*mymap_leader_qt*  n  \qt   open a new terminal in a new tab


-----------------------------------------------------------------------------
                                                      *myler*  *mymap_leader_r*
-----------------------------------------------------------------------------

Iron: set-up and navigation ~
*mymap_leader_rs*  n  \rr   Start repl
*mymap_leader_rl*  n  \rn   reLoad repl ("New")
*mymap_leader_rq*  n  \rc   Close repl
*mymap_leader_rj*  n  \rj   Jump to repl window
*mymap_leader_rh*  n  \rh   hide repl window

Iron: code execution ~
*mymap_leader_rr*  n  \rr   run current line
                 v  \rr   run visual selection
*mymap_leader_ra*  n  \ra   run all lines Above cursor
*mymap_leader_rf*  n  \rf   run file
*mymap_leader_rb*  n  \rf   run Block
*mymap_leader_rn*  n  \rf   run block and move to Next

*mymap_leader_rc*  n  \rx   Clear
*mymap_leader_rx*  n  \rx   send stop signal

*mymap_leader_r_cr* n \r<cr> send <CR>
*mymap_leader_ri*  n  \ri   Insert arbitrary command

*mymap_leader_rd*
*mymap_leader_re*
*mymap_leader_rg*
*mymap_leader_rk*
*mymap_leader_rm*
*mymap_leader_ro*
*mymap_leader_rp*
*mymap_leader_rq*
*mymap_leader_rt*
*mymap_leader_ru*
*mymap_leader_rv*
*mymap_leader_rw*
*mymap_leader_ry*
*mymap_leader_rz*

For help on the specific languages, see the |repl| help page.


-----------------------------------------------------------------------------
Search and replace                                    *myles*  *mymap_leader_s*
-----------------------------------------------------------------------------

Basic file search and replace ~
*mymap_leader_ss*  n  \ss   Show all matches of the word under cursor
                 v  \ss   Show all matches of the selected text
*mymap_leader_sr*  n  \sr   Replace word under cursor
                 v  \sr   Replace selected text

Options ~
*mymap_leader_sc*  n  \sc   Clear the previous search
*mymap_leader_sh*  n  \sh   toggle Highlighting of search results
*mymap_leader_si*  n  \si   toggle Incremental search

Grug-far ~
*mymap_leader_sg*  n  \sg   launch Grug-far
                 v  \sg   launch Grug-far with the current visual selection
*mymap_leader_sf*  n  \sf   launch grug-far on current File
                 v  \sf   launch grug-far on current File with visual sel.



-----------------------------------------------------------------------------
File tree and other sidebar-based elements            *mylet*  *mymap_leader_t*
-----------------------------------------------------------------------------

Directory ~
*mymap_leader_td*  n  \td   change the Tab Directory to current file parent
*mymap_leader_tp*  n  \tp   move the Tab directory to Parent folder

Nvim-tree ~
*mymap_leader_tt*  n  \tt   open file Tree
*mymap_leader_tT*  n  \tT   close file Tree
*mymap_leader_tf*  n  \tf   show (Find) current file in tree, but only in CWD
*mymap_leader_tF*  n  \tF   show (Find) current file in tree, even outside CWD
*mymap_leader_tj*  n  \tj   Jump to current file in tree, but only in CWD
*mymap_leader_tJ*  n  \tJ   Jump to current file in tree, even outside CWD

Oil ~
*mymap_leader_to*  n  \to   open Oil in current buffer (alias: |mymap_-|)

Undotree ~
*mymap_leader_tu*  n  \tu   open Undo history
*mymap_leader_tU*  n  \tU   close Undo history

Tabby ~
*mymap_leader_tr*  n  \tr   Rename tab
*mymap_leader_tmn* n  \tmn  move Tab to Next position 
*mymap_leader_tmp n  \tmp  move Tab to Previous position


*mymap_leader_ta*
*mymap_leader_tb*
*mymap_leader_tc*
*mymap_leader_te*
*mymap_leader_tg*
*mymap_leader_th*
*mymap_leader_ti*
*mymap_leader_tk*
*mymap_leader_tl*
*mymap_leader_tq*
*mymap_leader_ts*
*mymap_leader_tv*
*mymap_leader_tw*
*mymap_leader_tx*
*mymap_leader_ty*
*mymap_leader_tz*


-----------------------------------------------------------------------------
                                                      *myleu*  *mymap_leader_u*
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
                                                      *mylev*  *mymap_leader_v*
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Workspace and sessions                                *mylew*  *mymap_leader_w*
-----------------------------------------------------------------------------

Possession ~
*mymap_leader_ws*  n  \ws   show list of Sessions
*mymap_leader_wl*  n  \wl   load Latest session
*mymap_leader_wd*  n  \wd   load latest session for current Directory
*mymap_leader_wm*  n  \wm   save session ("Mksession") 
*mymap_leader_wu*  n  \wu   Update current session (i.e. overwite)
*mymap_leader_wi*  n  \wi   get name ("Info") of current session

Workspaces ~
*mymap_leader_wp*  n  \wp   Pick workspace
*mymap_leader_wa*  n  \wa   prefill command line to perform a workspace Action


-----------------------------------------------------------------------------
Quick settings                                        *mylex*  *mymap_leader_x*
-----------------------------------------------------------------------------

Settings ~
*mymap_leader_xa*  n  \xa   toggle 'autoread'
*mymap_leader_xg*  n  \xg   toggle signcolumn (Gutter) when there are no signs
*mymap_leader_xl*  n  \xl   toggle 'list'
*mymap_leader_xm*  n  \xm   toggle mouse mode between "all" and disabled
*mymap_leader_xs*  n  \xs   toggle 'spell'
*mymap_leader_xw*  n  \xw   toggle 'wrap'
*mymap_leader_xe*  n  \xe   toggle visibility of signcolumn ("Gutter")

Theme ~
*mymap_leader_xt*  n  \xt   change Theme

Debugging ~
*mymap_leader_xys*  n  \xys  Start performance Profiniling
*mymap_leader_xye*  n  \xye  End performance Profiniling

Unused ~
*mymap_leader_xb*
*mymap_leader_xc*
*mymap_leader_xd*
*mymap_leader_xf*
*mymap_leader_xh*
*mymap_leader_xi*
*mymap_leader_xj*
*mymap_leader_xk*
*mymap_leader_xn*
*mymap_leader_xo*
*mymap_leader_xp*
*mymap_leader_xq*
*mymap_leader_xr*
*mymap_leader_xu*
*mymap_leader_xv*
*mymap_leader_xx*
*mymap_leader_xz*


-----------------------------------------------------------------------------
Plugin toggles                                        *myley*  *mymap_leader_y*
-----------------------------------------------------------------------------

UI
*mymap_leader_yz*  n  \yx   toggle Zen mode
*mymap_leader_yn*  n  \yn   toggle Noice

Cmp ~
*mymap_leader_yc*  n  \yc   toggle Completion

Autoclose ~
*mymap_leader_yp*  n  \yp   toggle Autopair

Indent-blankline ~
*mymap_leader_yi*  n  \yi   toggle Indent guides
*mymap_leader_ys*  n  \ys   toggle Scope guides


Unused ~
*mymap_leader_ya*
*mymap_leader_yb*
*mymap_leader_yd*
*mymap_leader_ye*
*mymap_leader_yf*
*mymap_leader_yg*
*mymap_leader_yh*
*mymap_leader_yj*
*mymap_leader_yk*
*mymap_leader_yl*
*mymap_leader_ym*
*mymap_leader_yo*
*mymap_leader_yq*
*mymap_leader_yr*
*mymap_leader_yt*
*mymap_leader_yu*
*mymap_leader_yv*
*mymap_leader_yw*
*mymap_leader_yy*


-----------------------------------------------------------------------------
                                                      *mylez*  *mymap_leader_z*
-----------------------------------------------------------------------------




=============================================================================
G MAPPINGS                                                            |mymap_g|
-----------------------------------------------------------------------------



-----------------------------------------------------------------------------
Comments                                                     *mygc*  *mymap-gc*
                                                             *mygb*  *mymap-gb*
-----------------------------------------------------------------------------

The following commands use a 'g' mapping instead of a leader mapping because
they can work with a Vim motion, which is not used in any of my leader
mappings.
Implemented by the 'comment.nvim' plugin.

*mymap_gc_*  n  gc{motion}  toggle Comment
           v  gc          toggle Comment on visual selection
*mymap_gb_*  n  gb{motion}  toggle Block comment
           v  gb          toggle Block comment on visual selection

*mymap_gcc*  n  gcc         toggle Comment on line
*mymap_gbb*  n  gbb         toggle Block comment on line

*mymap_gcO*  n  gcO         inset comment line above
*mymap_gco*  n  gco         inset comment line below
*mymap_gcA*  n  gcA         inset comment at the end of the current line


-----------------------------------------------------------------------------
Brackets and quotes                                          *mygz*  *mymap-gz*
-----------------------------------------------------------------------------

Implemented by the 'nvim-surround' plugin.

*mymap_gz_*  n  gz{motion}{char}   insert pair of {char} (see note below)
           v  gz{char}           in sert pair of {char} around selection
*mymap_gZ_*  n  gZ{motion}{char}   insert multiline pair of {char} 
           v  gZ{char}           in sert multiline pair of {char} around selection


*mymap_gzz*  n  gzz{char}          insert pair of {char} around current line
*mymap_gZZ*  n  gZZ{char}          insert multiline pair of {char} around line

*mymap_gzd*  n  gzd{char}          Delete a pair of {char} around the cursor

*mymap_gzc*  n  gzr{char1}{char2}  Change a pair of {char1} to {char2}
*mymap_gZc*  n  gZr{char1}{char2}  same as above, but multiline

NOTE: when inserting a pair, using the opening character will also insert a
space, while using the closing one will only insert the pair.

The following aliases are available for {char}:
    a: Angle brackets      `>`
    p: Parentheses         ``
    b: Curly brackets      ``
    r: Rectangle brackets  `]`
    t: Backtick            (backtick, i.e. grave accent)
    q: Quotes              `"'` (and backtick)
    s: Surround            `}>"'` (and backtick)




=============================================================================
OTHER MAPPINGS                                                    |mymap_other|
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Overwritten defaults                                *myoo*  *mymap_overwritten*
-----------------------------------------------------------------------------

Copy-paste ~
*mymap_Y*         n   Y{motion}  remapped to `"*y`: yank text to system clipboard
                v   Y          remapped to `"*y`: yank text to system clipboard
*mymap_YY*        n   YY         remapped to `"*yy`: yank line to system clipboard

Marks ~
*mymap_'*         n   '          remapped to |`|
*mymap_'{nr}*     n   '{nr}      jump to bookmark [marks] (alias: |mymap_]{nr}|)

Jumps (flash) ~
*mymap_s*         nxo s          jump to position
*mymap_S*         nxo S          jump to treesitter node
*mymap_r*         o   {action}r  perform action on remote position
*mymap_R*         xo  {action}R  perform action on treesitter selection

Note: use <C-s> in command-line mode to toggle flash during / and ? searches

-----------------------------------------------------------------------------
Marks                                                          *mym*  *mymap_m*
-----------------------------------------------------------------------------

Alphabetical marks ~
*mymap_m{char}*   n  m{char}  set the mark {char} (emulates |m|)
*mymap_m,*        n  m,       set the next free alphabetical mark
*mymap_dm{char}*  n  dm{char} remove the mark {char}
*mymap_dm-*       n  dm-      remove marks on current line
*mymap_dm_*       n  dm_      remove marks in current buffer
*mymap_m}*        n  m}       go to the next mark in buffer
*mymap_m{*        n  m{       go to the previous mark in buffer
*mymap_m:*        n  m:       preview mark (prompts for {char})

Bookmarks ~
*mymap_m{nr}*     n  m{nr}    set a bookmark of type {nr}
*mymap_m=*        n  m=       delete bookmark on current line
*mymap_dm{nr}*    n  m{nr}    delete all bookmarks of type {nr}
*mymap_m]]*       n  m]]      go to next bookmark in the same group
*mymap_m[[*       n  m[[      go to previous bookmark in the same group
*mymap_m]{nr}*    n  m]{nr}   go to next bookmark of type {nr} (alias: |mymap_'{nr}|')
*mymap_m[{nr}*    n  m[{nr}   go to previous bookmark of type {nr}
*mymap_m\*        n  m\       annotate current bookmark


-----------------------------------------------------------------------------
CTRL mappings                                              *myct*  *mymap_ctrl*
-----------------------------------------------------------------------------

Window navigation  ~
*mymap_CTRL-H*    n   <C-H>      remap to |CTRL-W_h|
*mymap_CTRL-J*    n   <C-J>      remap to |CTRL-W_j|
*mymap_CTRL-K*    n   <C-K>      remap to |CTRL-W_k|
*mymap_CTRL-L*    n   <C-L>      remap to |CTRL-W_l|
*mymap_CTRL-P*    n   <C-P>      remap to |CTRL-W_p|

Window motions ~
*mymap_CTRL-W_m*  n   <C-W>m     Move window (interactively) [winshift]
                    <C-W><C-M>
*mymap_CTRL-W_x*  n   <C-W>x     Swap window (interactively) [winshift]
                    <C-W><C-X>

LSP ~
*mymap_CTRL-S*    n   <C-S>      show Signature help (alias: |mymap_i_CTRL-S|)

-----------------------------------------------------------------------------
Bracket mappings                                         *my[*  *mymap_bracket*
-----------------------------------------------------------------------------

Git ~
*mymap_]c*        n   ]c    move to next hunk ("Change") (alias: |mymap_leader_gn|)
*mymap_[c*        n   [c    move to previous hunk (alias: |mymap_leader_gp|)
Note: these mappings are analoguous to the equivalent mappings in diff mode.

Diagnostics ~
*mymap_]d*        n   ]d   move to next Diagnostic message (alias: |mymap_leader_leader_n|)
*mymap_[d*        n   [d   move to previous Diagnostic message (alias: |mymap_leader_leader_p|)
*mymap_]e*        n   ]e   move to next diagnostic Error
*mymap_[e*        n   [e   move to previous diagnostic Error
*mymap_]w*        n   ]w   move to next diagnostic Warning or error
*mymap_[w*        n   [w   move to previous diagnostic Warning or error

Symbols ~
*mymap_]a*        n   ]a    move to next Aerial symbol (alias: |mymap_leader_an|)
*mymap_[a*        n   [a    move to previous Aerial symbol (alias: |mymap_leader_ap|)

Quickfix/location list ~
*mymap_]q*        n   ]q    move to next quickfix item (alias: |mymap_leader_qn|)
*mymap_[q*        n   [q    move to previous quickfix item (alias: |mymap_leader_qp|)
*mymap_]l*        n   ]l    move to next location item (alias: |mymap_leader_qn|)
*mymap_[l*        n   [l    move to previous location item (alias: |mymap_leader_qp|)

-----------------------------------------------------------------------------
Miscellaneous                                              *mymi*  *mymap_misc*
-----------------------------------------------------------------------------

Buffer navigation ~
*mymap_bs*        n   <bs> jump to alternate buffer (alias: |CTRL-^|)
*mymap_cr*        n   <cr> insert line below (maps to |o<esc>|)
*mymap_s-cr*      n  <s-cr> insert line above (maps to |O<esc>|)
*mymap_-*         n    <-> open the parent directory in Oil (alias: |mymap_leader_to|)



=============================================================================
SPECIAL BUFFERS                                                 |mymap_special|
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Quickfix and location lists                            *myqf*  *mymap_quickfix*
-----------------------------------------------------------------------------

Window ~
*mymap_qf_q*      n   q     Quit quickfix window

Open items ~
*mymap_qf_<cr>*   n   <cr>  Open item under cursor
*mymap_qf_o*      n   o     Open item under cursor without losing focus

Motions with auto-open ~
*mymap_qf_P*      n   P     toggle auto-open mode for mappings below
*mymap_qf_j*      n   j     go to next item (optional auto-open)
*mymap_qf_k*      n   k     go to previous item (optional auto-open)
*mymap_qf_gg*     n   gg    go to first item (optional auto-open)
*mymap_qf_G*      n   G     go to last item (optional auto-open)

Other motions [bqf] ~
*mymap_qf_J*      n   J     go to first item in next file
*mymap_qf_K*      n   K     go to last item in previous file
*mymap_qf_locle_l* n  ,l    go to the last selected item

Lists history ~
*mymap_qf_ctrl_n* n   <c-n> switch to the next quickfix list (|cnewer|)
*mymap_qf_ctrl_p* n   <c-p> switch to the previous quickfix list (|colder|)

Signs [bqf] ~
*mymap_qf_tab*    n   <tab> toggle the sign of the current item
                  v   <tab> toggle the sign of the selected items
*mymap_qf_S-tab*  n   <s-tab> toggle the sign of all items in the current file
*mymap_qf_locle_c* n  ,c    Clear all signs
*mymap_qf_locle_f* n  ,f    Filter all items with sign
*mymap_qf_locle_F* n  ,F    Filter all items without sign

Preview [bqf] ~
*mymap_qf_p*       n   p    toggle preview
*mymap_qf_locle_p* n  ,p    toggle preview for a single item
*mymap_qf_locle_z* n  ,h    toggle zoom level of the preview
*mymap_qf_ctrl-f*  n   <c-f> scroll up in the preview
*mymap_qf_ctrl-b*  n   <c-b> scroll down in the preview
*mymap_qf_locle_r* n  ,r    reset position of the preview

Inline preview [quicker] ~
*mymap_qf_zr*      n   zr   expand inline context aroune all items ("Reduce fold")
*mymap_qf_zm*      n   zm   collapse inline context aroune all items ("More fold")

Sync [quicker] ~
*mymap_qf_ctrl-r*  n   <c-r> Refresh current quickfix


-----------------------------------------------------------------------------
Terminal                                              *myter*  *mymap_terminal*
-----------------------------------------------------------------------------

*mymap_t_esc-esc* t   <esc><esc> exit terminal mode (into normal mode)


=============================================================================
OTHER MAPPINGS                                                    |mymap_other|
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Markdown files                                    *myftmd*  *mymap_ft_markdown*
-----------------------------------------------------------------------------

Rendering ~
*mymap_ftmd_locle_r*  n  ,r   toggle Render [render-markdown]
*mymap_ftmd_locle_e*  n  ,e   Expand unconcealded context [render-markdown]
*mymap_ftmd_locle_d*  n  ,d   Decrease unconcealded context [render-markdown]

                                                  *myftob*  *mymap_ft_obsidian*
Obsidian ~
The following mappings only work in buffers containing a file in an Obsidian
vault. The directories containing Obsidian vaults are listed in the
configuration file for the obsidian.nvim plugin.

*mymap_ftob_locle_o*  n  ,o   Open note picker
*mymap_ftob_locle_s*  n  ,s   Search
*mymap_ftob_locle_f*  n  ,f   Follow closest link to cursor

*mymap_ftob_locle_n*  n  ,n   New note
*mymap_ftob_locle_t*  n  ,t   insert Template
*mymap_ftob_locle_i*  n  ,i   paste Image from system clipboard

*mymap_ftob_locle_c*  n  ,c   show table of Contents for note
*mymap_ftob_locle_l*  n  ,l   open list of Links in note
*mymap_ftob_locle_b*  n  ,b   open list of Backlinks in note
*mymap_ftob_locle_g*  n  ,g   show all occurrences of taG under cursor

*mymap_ftob_locle_a*  n  ,a   open the current note in the obsidian App





=============================================================================
KEYBOARD                                                      *config-keyboard*
=============================================================================



Standard normal mode layout                               *StandardizeKeyboard*
                                                     *StandardizeKeyboardReset*


                                                       *config-keyboard-normal*

This schematic illustrates the keyboard layout I use in normal mode. The
|StandardizeKeyboard| command can be used to obtain this layout with any
keyboard.
┌────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬──────┐
│ CL │  1  │  2  │  3  │  4  │  5  │  6  │  7  │  8  │  9  │  0  │     │     │   BS │
│    │     │     │     │  $  │     │     │     │     │     │     │     │     │      │
├────┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬────┤
│ TAB  │  q  │  w  │  e  │  r  │  t  │  z  │  u  │  i  │  o  │  p  │  [  │  ]  │ CR │
│      │     │     │     │     │     │     │     │     │     │     │  {  │  }  │    │
├──────┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┐  │
│  esc   │  a  │  s  │  d  │  f  │  g  │  h  │  j  │  k  │  l  │  :  │  '  │  \  │  │
│        │     │     │     │     │     │     │     │     │     │  ;  │  "  │  |  │  │
├─────┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴─────┴──┤
│  S  │     │  y  │  x  │  c  │  v  │  b  │  n  │  m  │  ,  │  .  │     │        S  │
│     │     │     │     │     │     │     │     │     │     │     │     │           │
├────┬┴────┬┴────┬┴────┬┴─────┴─────┴─────┴─────┴─────┴┬────┴┬────┴┬────┴┬────┬─────┤
│    │  C  │     │     │                               │     │     │  C  │    │     │
│    │     │     │     │                               │     │     │     │    │     │
└────┴─────┴─────┴─────┴───────────────────────────────┴─────┴─────┴─────┴────┴─────┘
Note: this based on a US layout, but:
- the physical layout is ISO (not ANSI)
- `:` and `;` are swapped (usually the non-shifted character is `;`, but `:`
  is used far more often in Vim)
- the layout of the letter keys is QWERTZ (instead of QWERTY)
- special characters that are not often used in Vim are not remapped


                                                  *config-keyboard-standardize*

The custom |StandardizeKeyboard| plugin allows to quickly create a list of
mappings to get this layout in Normal mode regardless of the actual layout.
Use >
    :StandardizeKeyboard
< to redefine the mappings file, which will then be loaded automatically along
with the rest of the configuration, and >
    :StandardizeKeyboardReset
< to delete that file and revert to the actual keyboard layout.

Note: 'langmap' has some known bugs which may among other things break some
mappings. Moreover, it doesn't work in all situations where the "normal mode
layout" may be expected. Changing the keyboard layout outside of Vim is thus
preferred, especially if a lot of symbols (as opposed to letters) must be
remapped.

                                                          *config-keyboard-esc*

Note: the position of Caps Lock (CL) and esc is inverted in most modern
keyboards. It is not possible to swap these keys from within Vim, an
external program must be used to do so (e.g. Karabiner on macOS). Similarly an
external remapping program is required to obtain a right Control key (C) on
Macs that only have cmd, alt and the arrow keys on the right hand side of the
spacebar.



=============================================================================
COMMANDS                                                      *config-commands*
=============================================================================



-----------------------------------------------------------------------------
Toggles
-----------------------------------------------------------------------------


General ~
*Finder*          Reveal current file in finder
*Open*            Open current file in default app

Treesittr ~
*TSInspect*       Show treesitter tree for current buffer

Debugging ~
*HiTest*          Print all highlight groups; powered by the /syntax/hitest.vim
                plugin




_____________________________________________________________________________

vim:noro:tw=78:ts=4:ft=help:ma:nowrap
